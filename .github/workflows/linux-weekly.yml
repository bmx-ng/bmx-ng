name: Linux Weekly

on: 
  schedule:
    - cron: '20 0 * * 0'
  workflow_dispatch:

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
  
        - name: Build Docker image
          run: |
            docker build --platform linux/amd64 -t blitzmax_linux_cross_compile -f src/scripts/Dockerfile.linux .
  
        - name: Run build script in Docker
          run: |
            mkdir -p build
            cp src/scripts/build_release.sh build
            docker run -v $GITHUB_WORKSPACE/build:/build -w /build blitzmax_linux_cross_compile ./build_release.sh -b 0.129.3.45 -a x64 -r x64 -p -t
  
        - name: Populate env variables
          run: |
            echo "VERSION_TAG=$(cat build/version-tag.txt)" >> $GITHUB_ENV
            echo "PACKAGE_NAME=$(cat build/package-name.txt)" >> $GITHUB_ENV
            echo "PACKAGE_MIME_TYPE=$(cat build/package-mime.txt)" >> $GITHUB_ENV

        - name: Set custom tag
          id: custom_tag
          run: |
            echo "tag=v${{ env.VERSION_TAG }}.linux.x64" >> $GITHUB_OUTPUT

        - name: Create Release and Upload Asset
          uses: softprops/action-gh-release@v1
          with:
            tag_name: ${{ steps.custom_tag.outputs.tag }}
            name: "[weekly] BlitzMax Linux x64 v${{ env.VERSION_TAG }}"
            body: |
                BlitzMax, Linux edition, aimed at x64 development, with x64 MaxIDE.

                Includes SDL backend, mojo2, Crypto, Audio, Archive, Image, Math, Net, Random, Text, Steam and Gtk MaxGUI.
                
                ### Installation notes
                
                See the [Getting Started Guide](https://blitzmax.org/docs/en/setup/linux/) at the BlitzMax website.

                *Note: This is a weekly build, and may contain bugs. Use at your own risk.*
            prerelease: true
            files: ./build/${{ env.PACKAGE_NAME }}
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  