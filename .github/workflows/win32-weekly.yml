name: Win32 Weekly

on: 
  schedule:
    - cron: '0 0 * * 0'

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
  
        - name: Build Docker image
          run: |
            docker build --platform linux/amd64 -t blitzmax_win32_cross_compile -f src/scripts/Dockerfile.win32 .
  
        - name: Run build script in Docker
          run: |
            mkdir -p build
            docker run -v $GITHUB_WORKSPACE/build:/build -w /build blitzmax_win32_cross_compile src/scripts/build_release.sh -l win32 -a x86x64 -b 0.129.3.45 -r x64 -p -t
  
        - name: Set version as env variable
          run: echo "VERSION_TAG=$(cat version-tag.txt)" >> $GITHUB_ENV

        - name: Set custom tag
          id: custom_tag
          run: |
            echo "::set-output name=tag::v${{ env.VERSION_TAG }}.win32.mingw"
  
        # - name: Create Release
        #   id: create_release
        #   uses: actions/create-release@v1
        #   env:
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   with:
        #     tag_name: ${{ steps.custom_tag.outputs.tag }}
        #     release_name: Release ${{ steps.custom_tag.outputs.tag }}
        #     draft: false
        #     prerelease: false
  
        # - name: Upload Release Asset
        #   id: upload-release-asset 
        #   uses: actions/upload-release-asset@v1
        #   env:
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   with:
        #     upload_url: ${{ steps.create_release.outputs.upload_url }} 
        #     asset_path: ./build/your_asset.zip
        #     asset_name: your_asset.zip
        #     asset_content_type: application/zip
  